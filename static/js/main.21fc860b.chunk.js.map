{"version":3,"sources":["assets/images/shopping.jpg","components/Items.js","axios-items.js","container/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Items","props","deletedStyle","color","textDecoration","react_default","a","createElement","reactstrap_es","className","items","map","item","style","selected","key","itemId","itemName","itemQuantity","trim","length","onClick","click","index_es","icon","faCheck","instance","axios","create","baseURL","ShoppingList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nameChangeHandler","event","setState","newItemName","target","value","quantityChangeHandler","newItemQuantity","addItemHandler","preventDefault","state","prevState","toConsumableArray","concat","uuidv1","toggleButtonHandler","id","clickedItem","find","itemIndex","indexOf","newItems","splice","deleteItemHandler","filteredItems","filter","showItemsHandler","doesShow","showItems","onDismissHandler","showAlert","saveListHandler","put","then","responce","console","log","catch","error","_this2","get","response","data","shoppingItems","components_Items","toggleOn","faEye","title","toggleOff","faEyeSlash","isOpen","toggle","inline","onSubmit","type","onChange","placeholder","required","disabled","faPlus","some","e","faMinus","faSave","Component","backgroundImage","Background","backgroundSize","overflow","App","faShoppingBasket","container_ShoppingList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21fc860b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping.90ca650c.jpg\";","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport '../Styles.css';\r\n\r\nconst Items = (props) => {\r\n\r\n    const deletedStyle = {\r\n        color: '#363535',\r\n        textDecoration: 'line-through'\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"mx-auto mt-5\">\r\n            {props.items.map((item) =>\r\n            <ListGroupItem className=\"border-secondary\" style={item.selected ? deletedStyle : null } key={item.itemId}>{item.itemName}\r\n            {item.itemQuantity && item.itemQuantity.trim().length > 0 ? ' - ' + item.itemQuantity : null}\r\n                <span className=\"float-right\">\r\n                    <button\r\n                    className={item.selected ?  \"btn btn-sm btn-outline-secondary align-top mx-2\" : \"btn btn-sm btn-outline-light align-top mx-2\"}\r\n                    onClick={() => props.click(item.itemId)}>\r\n                        <FontAwesomeIcon icon={faCheck}/>\r\n                    </button>\r\n                </span>\r\n            </ListGroupItem>\r\n        )}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Items;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-shopping-list-a5bb8.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport Items from '../components/Items';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus, faEye, faEyeSlash, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { Alert, Form, FormGroup, Input } from 'reactstrap';\r\nimport axios from '../axios-items';\r\nimport uuidv1 from 'uuid/v1';\r\n\r\nclass ShoppingList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newItemName: '',\r\n            newItemQuantity: '',\r\n            items: [],\r\n            showItems: true,\r\n            showAlert: false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('/ShoppingList.json')\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({items: response.data});\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n        };\r\n\r\n    nameChangeHandler = (event) => {\r\n        this.setState({\r\n            newItemName: event.target.value\r\n        });\r\n    }\r\n\r\n    quantityChangeHandler = (event) => {\r\n        this.setState({\r\n            newItemQuantity: event.target.value\r\n        });\r\n    }\r\n\r\n    addItemHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.newItemName && this.state.newItemName.trim().length > 0) {\r\n            this.setState((prevState) => ({\r\n                items: [...prevState.items, {itemName: prevState.newItemName, itemId: uuidv1(), selected: false, itemQuantity: prevState.newItemQuantity}],\r\n                newItemName: '',\r\n                newItemQuantity: ''\r\n            }));\r\n        }\r\n    }\r\n\r\n    toggleButtonHandler = (id) => {\r\n        let clickedItem = this.state.items.find(item => item.itemId === id);\r\n        const itemIndex = this.state.items.indexOf(clickedItem);\r\n        clickedItem.selected = !clickedItem.selected;\r\n        let newItems = this.state.items;\r\n        newItems.splice(itemIndex, 1, clickedItem);\r\n        this.setState({\r\n            items: newItems\r\n        });\r\n    }\r\n\r\n    deleteItemHandler = () => {\r\n        const filteredItems = this.state.items.filter(item => !item.selected);\r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    showItemsHandler = () => {\r\n        const doesShow = this.state.showItems;\r\n        this.setState({ showItems: !doesShow });\r\n    }\r\n\r\n    onDismissHandler = () => {\r\n        this.setState({ showAlert: false });\r\n    }\r\n\r\n    saveListHandler = () => {\r\n        axios.put('/ShoppingList.json', this.state.items)\r\n            .then(responce => console.log(responce))\r\n            .catch(error => console.log(error));\r\n        this.setState ({ showAlert: true });\r\n    }\r\n\r\n    render() {\r\n        let shoppingItems = null;\r\n        if (this.state.showItems) {\r\n            shoppingItems = (\r\n            <div>\r\n                <Items\r\n                    items={this.state.items}\r\n                    click={this.toggleButtonHandler} />\r\n            </div>\r\n            );\r\n        }\r\n\r\n        const toggleOn = (<FontAwesomeIcon icon={faEye} title=\"Show items\"/>);\r\n        const toggleOff = (<FontAwesomeIcon icon={faEyeSlash} title=\"Hide items\"/>);\r\n\r\n        return (\r\n            <div className=\"container ShoppingList mx-auto\">\r\n            {this.state.showAlert ?\r\n                <Alert className=\"mx-auto text-center\" color=\"success\" isOpen={this.state.showAlert} toggle={this.onDismissHandler}>Your shopping list has been saved</Alert> : null}\r\n                <Form inline onSubmit={this.addItemHandler}>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Input className=\"mr-2 my-2 border-secondary\" type=\"text\" value={this.state.newItemName} onChange={this.nameChangeHandler} placeholder=\"Enter item\" required/>\r\n                        <Input className=\"my-2 border-secondary\" type=\"text\" value={this.state.newItemQuantity} onChange={this.quantityChangeHandler} placeholder=\"Enter quantity\"/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <button className=\"btn btn-md btn-outline-secondary align-top my-2\" disabled={!this.state.newItemName} type=\"submit\" title=\"Add item\">\r\n                            <FontAwesomeIcon icon={faPlus}/>\r\n                        </button>\r\n                        <button className=\"btn btn-md btn-outline-secondary align-top ml-2 my-2\" disabled={!this.state.items.some((e) => e.selected)} type=\"button\" onClick={this.deleteItemHandler} title=\"Delete items\">\r\n                            <FontAwesomeIcon icon={faMinus}/></button>\r\n                        <button className=\"btn btn-md btn-outline-secondary align-top ml-2 my-2\" type=\"button\" onClick={this.showItemsHandler}>\r\n                            {this.state.showItems ? toggleOff : toggleOn }\r\n                        </button>\r\n                        <button className=\"btn btn-md btn-outline-secondary align-top ml-2 my-2\" type=\"button\" onClick={this.saveListHandler} title=\"Save list\">\r\n                            <FontAwesomeIcon icon={faSave}/>\r\n                        </button>\r\n                    </FormGroup>\r\n                </Form>\r\n                {shoppingItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingList;","import React, { Component } from 'react';\nimport './Styles.css';\nimport ShoppingList from './container/ShoppingList';\nimport Background from '../src/assets/images/shopping.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingBasket } from '@fortawesome/free-solid-svg-icons';\n\nconst backgroundImage = {\n    backgroundImage: `url(${Background})`,\n    backgroundSize: 'cover',\n    overflow: 'hidden'\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={backgroundImage} >\n        <header className=\"App-header\">\n          <h1>Shopping List <FontAwesomeIcon icon={faShoppingBasket}/> </h1>\n        </header>\n        <ShoppingList/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}